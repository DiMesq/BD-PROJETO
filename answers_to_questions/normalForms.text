# Consider the utlizador relation, where there are two candidate keys the userid and the email
#
# a) In what normal form is the utilizador relation in?

	It's in the Boyce and Codd Normal Form. Firstly because the candidate 
	keys are "simple keys" (formed by a single atribute) and so since it 
	validates the requirements to be in the First Normal Form, it also 
	qualifies imediately for the Second Normal Form. Furthermore, there are 
	no functional dependencies between non-key fields, which garanties that 
	it's in the Third Normal Form. But, once again, because the candidate 
	keys are both "simple keys" the BCNF doesn't distinguish itself from the 
	Third Normal Form, hence it is in the BCNF.

	Está na Forma Normal de Boyce and Codd. Desde já, o facto de verificar 
	os critérios da 1ª Forma Normal - todos os atributos são definidos em domínios 
	com valores atómicos - conjugado com o facto de ambas as suas chaves 
	candidatas serem chaves "simples" coloca esta relação automaticamente 
	pelo menos na 2ª Forma Normal. Para além disso, como não há dependências 
	funcionais de atributos que não pertencem à chave para com outros atributos 
	sabemos que verifica também as condições da 
	3ª Forma Normal. Por fim, mais uma vez porque ambas as chaves candidatas 
	são "simples", a BCNF não se distingue da 3ª Forma Normal, logo é na BCNF 
	que a relacão se encontra.

# b) Let's consider that nome, password, questao2, resposta2, questao1, resposta1 -> email
#
# 	1. In what normal form is the utilizador relation now in?
		
		It's in the Second Normal Form. The reasons specified above that make this relation be in the 2NF still hold. However, the new functional dependency introduced violates the Third Normal Form requirements. To explain why, let X -> A represent the dependency introduced. Now, since A isn't a subset of X this is a non-trivial relation. So the only way that this functional dependency might not invalidate the 3NF is if either X is a superkey or if A is part of a key. Obviously neither are true, because X is not a super key and A is a key. Hence it is in the Second Normal Form. Furthermore, this dependency is sometimes called a transitive dependency. 

		Está na 2ª Forma Normal. As razões especificadas anteriormente que
		fazem esta relação estar na 2FN ainda se mantêm. No entanto, a nova 
		dependência funcional introduzida viola os requisitos para a 3ª Forma
		Normal. Para explicar porquê, tenha-se X -> A a representar a nova 
		dependência introduzida. Concretamente X representa o subconjunto 
		(nome, password, questao2, resposta2, questao1, resposta1) e A 
		representa o atributo (email). Ora, o facto de A não ser um subconjunto
		de X torna esta dependência não-trivial. Assim, para que esta 
		dependência não invalidasse os requisitos da 3FN seria necessário que
		X fosse uma super-chave do utilizador ou que A fizesse parte da 
		chave. Claramente nenhuma destas condições se verifica, visto que 
		nem X - (nome, password, questao2, resposta2, questao1, resposta1) -
		é uma superchave, nem A - (email) - faz parte da chave. Logo 
		podemos concluir que está na 2ª Forma Normal. Acrescenta-se que esta 
		nova dependência introduzida é por vezes chamada de dependência 
		transitiva, a presença da qual é suficiente para determinar que uma 
		tabela não se encontra na 3FN.

		

#	2. 	If it is not in BCNF decompose the utilizador relation into BCNF. 
		
		R1 (userid, nome, password, questao2, resposta2, questao1, resposta1, pais, categoria);

	   	R2 (nome, password, questao2, resposta2, questao1, resposta1, email).

	   	Aqui userid mantém-se como chave primária para a tabela R1 (como era na tabela utilizador) e agora 
	   	(nome, password, questao2, resposta2, questao1, resposta1) tem uma restrição de foreign key na tabela
	   	R2 referenciando a tabela R1.

	   	